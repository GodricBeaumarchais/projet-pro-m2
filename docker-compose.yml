version: '3.8'
services:
  api-dev:
    build: 
      context: ./back
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/mydb
    volumes:
      - ./back:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "npx prisma migrate deploy && npm run start:dev"

  api-prod:
    build: 
      context: ./back
      dockerfile: Dockerfile
      target: production 
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:pg3FJfDUlsYrJXqPyJZjszoxr2exRWIlyC8MXDjwQEX3QYmIe1Iiu5aERca0Zfl3@bccso0cog0s0w8cgws8woc8k:5432/postgres
    command: sh -c "npx prisma migrate deploy && npm run start:prod"

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: